{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/Documentos/GitHub/devChallenges/buttons/src/components/Inputs/Inputs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Inputs = props => {\n  _s();\n\n  const [checked, setChecked] = useState(null);\n  const [msgstatus, setMsgstatus] = useState(\"\");\n\n  const inputdisabled = () => {\n    if (checked === true) {\n      setChecked(false);\n      setMsgstatus(\"\");\n    }\n\n    if ([props.checked] === true) {\n      setChecked(false);\n      setMsgstatus(\"\");\n    } else {\n      setChecked(true);\n      setMsgstatus(\"You disabled text input\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-inp text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"<Input type=\\\"text\\\"/>\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-label\",\n      htmlFor: props.id1,\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: props.clName,\n      type: props.type,\n      id: props.id1,\n      disabled: checked,\n      placeholder: props.placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onClick: inputdisabled,\n        type: \"checkbox\",\n        id: props.id2,\n        checked: props.checked,\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label ml-1\",\n        htmlFor: props.id2,\n        children: \"Disable input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), checked === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger mt-3\",\n      children: msgstatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Inputs, \"rkVCMUeJQIpZRrpmgy5CQisP8FA=\");\n\n_c = Inputs;\nexport default Inputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inputs\");","map":{"version":3,"sources":["/home/nicolas/Documentos/GitHub/devChallenges/buttons/src/components/Inputs/Inputs.jsx"],"names":["React","useState","Inputs","props","checked","setChecked","msgstatus","setMsgstatus","inputdisabled","id1","clName","type","placeholder","id2"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMO,aAAa,GAAG,MAAM;AAC3B,QAAIJ,OAAO,KAAK,IAAhB,EAAsB;AACrBC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACA;;AAAA,QAAI,CAACJ,KAAK,CAACC,OAAP,MAAoB,IAAxB,EAA8B;AAC9BC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACA,KAHA,MAGM;AACNF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,YAAY,CAAC,yBAAD,CAAZ;AACA;AACD,GAXD;;AAaA,sBACC;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,OAAO,EAAEJ,KAAK,CAACM,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAKC;AACC,MAAA,SAAS,EAAEN,KAAK,CAACO,MADlB;AAEC,MAAA,IAAI,EAAEP,KAAK,CAACQ,IAFb;AAGC,MAAA,EAAE,EAAER,KAAK,CAACM,GAHX;AAIC,MAAA,QAAQ,EAAEL,OAJX;AAKC,MAAA,WAAW,EAAED,KAAK,CAACS;AALpB;AAAA;AAAA;AAAA;AAAA,YALD,eAYC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACC;AACC,QAAA,OAAO,EAAEJ,aADV;AAEC,QAAA,IAAI,EAAC,UAFN;AAGC,QAAA,EAAE,EAAEL,KAAK,CAACU,GAHX;AAIC,QAAA,OAAO,EAAEV,KAAK,CAACC,OAJhB;AAKC,QAAA,QAAQ;AALT;AAAA;AAAA;AAAA;AAAA,cADD,eAQC;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAmC,QAAA,OAAO,EAAED,KAAK,CAACU,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARD;AAAA;AAAA;AAAA;AAAA;AAAA,YAZD,EAwBET,OAAO,KAAK,IAAZ,gBACA;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,gBAA0CE;AAA1C;AAAA;AAAA;AAAA;AAAA,YADA,gBAGA;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAgCA,CAjDD;;GAAMJ,M;;KAAAA,M;AAmDN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Inputs = (props) => {\n\tconst [checked, setChecked] = useState(null);\n\tconst [msgstatus, setMsgstatus] = useState(\"\");\n\n\tconst inputdisabled = () => {\n\t\tif (checked === true) {\n\t\t\tsetChecked(false);\n\t\t\tsetMsgstatus(\"\");\n\t\t}if ([props.checked] === true) {\n\t\t\tsetChecked(false);\n\t\t\tsetMsgstatus(\"\");\n\t\t} else {\n\t\t\tsetChecked(true);\n\t\t\tsetMsgstatus(\"You disabled text input\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"container-inp text-center\">\n\t\t\t<p>&lt;Input type=\"text\"/&gt;</p>\n\t\t\t<label className=\"form-label\" htmlFor={props.id1}>\n\t\t\t\tUsername\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\tclassName={props.clName}\n\t\t\t\ttype={props.type}\n\t\t\t\tid={props.id1}\n\t\t\t\tdisabled={checked}\n\t\t\t\tplaceholder={props.placeholder}\n\t\t\t/>\n\t\t\t<div className=\"mt-3 text-center\">\n\t\t\t\t<input\n\t\t\t\t\tonClick={inputdisabled}\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tid={props.id2}\n\t\t\t\t\tchecked={props.checked}\n\t\t\t\t\tdisabled\n\t\t\t\t/>\n\t\t\t\t<label className=\"form-label ml-1\" htmlFor={props.id2}>\n\t\t\t\t\tDisable input\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t{checked === true ? (\n\t\t\t\t<div className=\"alert alert-danger mt-3\">{msgstatus}</div>\n\t\t\t) : (\n\t\t\t\t<span></span>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Inputs;\n"]},"metadata":{},"sourceType":"module"}