{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/Documentos/GitHub/devChallenges/buttons/src/components/Inputs/Inputs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Inputs = props => {\n  _s();\n\n  const [checked, setChecked] = useState(false);\n\n  const inputdisabled = () => {\n    if (checked === true) {\n      setChecked(false);\n    } else {\n      setChecked(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"<Input type=\\\"text\\\"/>\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onClick: inputdisabled,\n        type: \"radio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: props.id,\n        children: \"Disable input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: props.clName,\n      type: \"text\",\n      id: props.id,\n      name: props.name,\n      disabled: checked,\n      placeholder: props.placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Inputs, \"kHaqfwdMUPImP/h+92os+8yN3Ag=\");\n\n_c = Inputs;\nexport default Inputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inputs\");","map":{"version":3,"sources":["/home/nicolas/Documentos/GitHub/devChallenges/buttons/src/components/Inputs/Inputs.jsx"],"names":["React","useState","Inputs","props","checked","setChecked","inputdisabled","id","clName","name","placeholder"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAEzB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMK,aAAa,GAAG,MAAM;AAC3B,QAAGF,OAAO,KAAK,IAAf,EAAoB;AACnBC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KAFD,MAEK;AACJA,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA;AACD,GAND;;AAQA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,8BACA;AACA,QAAA,OAAO,EAAEC,aADT;AAEA,QAAA,IAAI,EAAC;AAFL;AAAA;AAAA;AAAA;AAAA,cADA,eAKA;AAAO,QAAA,OAAO,EAAEH,KAAK,CAACI,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eASC;AACA,MAAA,SAAS,EAAEJ,KAAK,CAACK,MADjB;AAEA,MAAA,IAAI,EAAC,MAFL;AAGA,MAAA,EAAE,EAAEL,KAAK,CAACI,EAHV;AAIA,MAAA,IAAI,EAAEJ,KAAK,CAACM,IAJZ;AAKA,MAAA,QAAQ,EAAEL,OALV;AAMA,MAAA,WAAW,EAAED,KAAK,CAACO;AANnB;AAAA;AAAA;AAAA;AAAA,YATD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAoBA,CAhCD;;GAAMR,M;;KAAAA,M;AAkCN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Inputs = (props) => {\n\n\tconst [ checked, setChecked ] = useState(false)\n\n\tconst inputdisabled = () => {\n\t\tif(checked === true){\n\t\t\tsetChecked(false)\n\t\t}else{\n\t\t\tsetChecked(true)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<p>&lt;Input type=\"text\"/&gt;</p>\n\t\t\t<div>\n\t\t\t<input\n\t\t\tonClick={inputdisabled} \n\t\t\ttype=\"radio\" \n\t\t\t/>\n\t\t\t<label htmlFor={props.id}>Disable input</label>\n\t\t\t</div>\n\t\t\t<input \n\t\t\tclassName={props.clName} \n\t\t\ttype=\"text\" \n\t\t\tid={props.id} \n\t\t\tname={props.name} \n\t\t\tdisabled={checked}\n\t\t\tplaceholder={props.placeholder}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default Inputs;"]},"metadata":{},"sourceType":"module"}